[project]
name = "gor-api"
version = "1.0.0"
description = "Global Offer Registry API for ACP Demo"
authors = [
    {name = "ACP Demo Team"}
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.11"
keywords = ["acp", "offers", "vector-search", "qdrant", "fastapi"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]

dependencies = [
    "fastapi>=0.104.1",
    "uvicorn[standard]>=0.24.0",
    "qdrant-client>=1.7.0",
    "openai>=1.3.7",
    "requests>=2.31.0",
    "python-dotenv>=1.0.0",
    "pydantic>=2.5.0",
    "numpy>=1.24.3",
    "python-multipart>=0.0.6",
    "aiohttp>=3.8.0",
    # ACP SDK dependency
    "acp-sdk @ file:///app/acp-sdk",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
]

[project.scripts]
gor-api = "src.main:main"
gor-ingest = "ingest_offers:main"
gor-test = "test_gor:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src"]

[tool.black]
line-length = 88
target-version = ['py311', 'py312', 'py313']

[tool.isort]
profile = "black"
multi_line_output = 3

[tool.hatch.metadata]
allow-direct-references = true

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"
asyncio_mode = "auto"
