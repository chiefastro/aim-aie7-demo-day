# Docker Compose configuration for GOR API

services:
  qdrant:
    image: qdrant/qdrant:latest
    container_name: gor-qdrant
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_data:/qdrant/storage
    env_file:
      - .env
    healthcheck:
      test: ["CMD", "bash", "-c", "timeout 5 bash -c '</dev/tcp/localhost/6333' && echo 'Port 6333 is open' || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - gor-network

  gor-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: gor-api
    ports:
      - "3001:3001"
    env_file:
      - .env
    environment:
      - PYTHONPATH=/app/src
      - QDRANT_HOST=gor-qdrant
      - QDRANT_PORT=6333
      - DEMO_SERVER_URL=http://host.docker.internal:3000
    volumes:
      - .:/app
      - /app/venv
    working_dir: /app
    depends_on:
      qdrant:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    networks:
      - gor-network

volumes:
  qdrant_data:
    driver: local

networks:
  gor-network:
    driver: bridge
