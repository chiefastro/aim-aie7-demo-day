[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "acp-sdk"
version = "0.1.0"
description = "Agentic Commerce Protocol (ACP) SDK for Python - Standardized commerce skills for A2A agents"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "ACP Team", email = "team@acp.dev"}
]
maintainers = [
    {name = "ACP Team", email = "team@acp.dev"}
]
keywords = ["acp", "a2a", "commerce", "agents", "protocol", "sdk"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
    "Topic :: Office/Business :: Financial :: Point-Of-Sale",
]
requires-python = ">=3.11"
dependencies = [
    "a2a-sdk[http-server]>=0.3.0",
    "pydantic>=2.0.0",
    "typing-extensions>=4.0.0",
    "httpx>=0.24.0",
    "asyncio-mqtt>=0.16.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.0.0",
    "ruff>=0.1.0",
]
docs = [
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=1.3.0",
]

[project.urls]
Homepage = "https://github.com/acp-org/acp-sdk-python"
Documentation = "https://acp-sdk-python.readthedocs.io/"
Repository = "https://github.com/acp-org/acp-sdk-python"
Issues = "https://github.com/acp-org/acp-sdk-python/issues"
Changelog = "https://github.com/acp-org/acp-sdk-python/blob/main/CHANGELOG.md"

[project.scripts]
acp-agent = "acp_sdk.cli:main"

[tool.hatch.build.targets.wheel]
packages = ["src/acp_sdk"]

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/tests",
    "/docs",
    "pyproject.toml",
    "README.md",
    "LICENSE",
    "CHANGELOG.md",
]

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["acp_sdk"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.ruff]
target-version = "py311"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
